{"type": "bundle", "id": "bundle--07c9e4d0-66d0-4211-ac74-a5d883226018", "objects": [{"type": "vulnerability", "spec_version": "2.1", "id": "vulnerability--ab58fecd-e711-4b60-b213-3158442d5237", "created": "2023-05-30T21:29:23.49214Z", "modified": "2023-05-30T21:29:23.49214Z", "name": "CVE-2020-25755", "description": "placeholder"}, {"type": "course-of-action", "spec_version": "2.1", "id": "course-of-action--31100ca3-ac83-4036-baf8-996af67519d2", "created": "2023-05-30T21:29:23.492359Z", "modified": "2023-05-30T21:29:23.492359Z", "name": "coa-1", "description": "Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable. Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them."}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--3e42403e-ec7c-4e1b-952f-56e149be46f8", "created": "2023-05-30T21:29:23.492479Z", "modified": "2023-05-30T21:29:23.492479Z", "relationship_type": "midigates", "source_ref": "course-of-action--31100ca3-ac83-4036-baf8-996af67519d2", "target_ref": "vulnerability--ab58fecd-e711-4b60-b213-3158442d5237"}, {"type": "course-of-action", "spec_version": "2.1", "id": "course-of-action--390158fa-ebcb-4e69-86ca-eafd8214fd86", "created": "2023-05-30T21:29:23.492621Z", "modified": "2023-05-30T21:29:23.492621Z", "name": "coa-2", "description": "Design: Do not program input values directly on command shell, instead treat user input as guilty until proven innocent. Build a function that takes user input and converts it to applications specific types and values, stripping or filtering out all unauthorized commands and characters in the process. Design: Limit program privileges, so if metacharacters or other methods circumvent program input validation routines and shell access is attained then it is not running under a privileged account. chroot jails create a sandbox for the application to execute in, making it more difficult for an attacker to elevate privilege even in the case that a compromise has occurred. Implementation: Implement an audit log that is written to a separate host, in the event of a compromise the audit log may be able to provide evidence and details of the compromise."}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--cf4fe1d8-75fb-4778-9be6-b8e571f93f0a", "created": "2023-05-30T21:29:23.492723Z", "modified": "2023-05-30T21:29:23.492723Z", "relationship_type": "midigates", "source_ref": "course-of-action--390158fa-ebcb-4e69-86ca-eafd8214fd86", "target_ref": "vulnerability--ab58fecd-e711-4b60-b213-3158442d5237"}, {"type": "course-of-action", "spec_version": "2.1", "id": "course-of-action--ddf0ec76-86a1-401e-af48-61263a545645", "created": "2023-05-30T21:29:23.492842Z", "modified": "2023-05-30T21:29:23.492842Z", "name": "coa-3", "description": "Design: Perform whitelist validation against a positive specification for command length, type, and parameters. Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account Implementation: Perform input validation for all remote content. Implementation: Use type conversions such as JDBC prepared statements."}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--76cb1e06-97a5-400f-861b-584580117dd4", "created": "2023-05-30T21:29:23.492943Z", "modified": "2023-05-30T21:29:23.492943Z", "relationship_type": "midigates", "source_ref": "course-of-action--ddf0ec76-86a1-401e-af48-61263a545645", "target_ref": "vulnerability--ab58fecd-e711-4b60-b213-3158442d5237"}, {"type": "course-of-action", "spec_version": "2.1", "id": "course-of-action--9774841d-6a6e-4318-8ad0-1df5bf536f37", "created": "2023-05-30T21:29:23.493067Z", "modified": "2023-05-30T21:29:23.493067Z", "name": "coa-4", "description": "Disable MSSQL xp_cmdshell directive on the database Properly validate the data (syntactically and semantically) before writing it to the database. Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--598d5522-f2af-4048-8347-e1fbac9cc8c8", "created": "2023-05-30T21:29:23.493169Z", "modified": "2023-05-30T21:29:23.493169Z", "relationship_type": "midigates", "source_ref": "course-of-action--9774841d-6a6e-4318-8ad0-1df5bf536f37", "target_ref": "vulnerability--ab58fecd-e711-4b60-b213-3158442d5237"}, {"type": "course-of-action", "spec_version": "2.1", "id": "course-of-action--318fa46f-d6ef-4662-88bc-1c70e5f70728", "created": "2023-05-30T21:29:23.493287Z", "modified": "2023-05-30T21:29:23.493287Z", "name": "coa-5", "description": "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it. Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters. Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."}, {"type": "relationship", "spec_version": "2.1", "id": "relationship--c7f6971f-1bcf-4ec8-a7a8-afa07c8c6b13", "created": "2023-05-30T21:29:23.493387Z", "modified": "2023-05-30T21:29:23.493387Z", "relationship_type": "midigates", "source_ref": "course-of-action--318fa46f-d6ef-4662-88bc-1c70e5f70728", "target_ref": "vulnerability--ab58fecd-e711-4b60-b213-3158442d5237"}]}